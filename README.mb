Киянко Матвей;
Название задания: Тестовое задание для С# разработчика;
Описание проекта:
В рамках данного задания я создал проект с использованием чистой архитектуры,
реализовав функциональность CRUD для сущностей Institution (Учреждение) и ее включениях сущности Tag (Тег) и сущности Category (Категория).
В проекте я использовал AutoMapper для упрощения маппинга между сущностями и DTO.
Проект состоит из 4 слоев, каждый из которых отвечает за свою область.

Архитектура проекта
Проект разделен на несколько слоев, каждый из которых выполняет свою задачу:

WebAPI:
Слой, который отвечает за предоставление API. В этом слое размещены контроллеры, принимающие запросы от клиента и отправляющие ответы.
Я использовал стандартные подходы для реализации API в ASP.NET Core, включая маршрутизацию,
а также использовал аннотации Swagger для документации и тестирования API.

Domain:
Этот слой включает в себя основные сущности и бизнес-логику приложения. Я создал модели, такие как Institution и Tag,
которые включают бизнес-логику и валидаторы.
Сущности имеют базовую структуру, поддерживающую взаимодействие с другими слоями через репозитории.

Infrastructure:
Слой, который реализует взаимодействие с внешними системами, например, базой данных.
Я использовал репозитории для получения данных и сохранения их в базу.
В этом слое также реализована логика взаимодействия с ORM (Entity Framework Core),
а также обработка ошибок при взаимодействии с базой данных.

Application:
В этом слое содержится основная бизнес-логика, которая использует репозитории и взаимодействует с доменными сущностями.
Я создал сервисы для обработки бизнес-операций, таких как создание, обновление, удаление и получение сущности Institution.
Также в этом слое используется AutoMapper для маппинга данных между сущностями и DTO (Data Transfer Objects).
Это позволяет удобно преобразовывать данные при передаче между слоями приложения и API.

Ссылка на проект: https://github.com/MATTHEWXT/MyContacts.git
